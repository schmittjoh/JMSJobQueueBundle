{% extends "@JMSJobQueue/base.html.twig" %}
{% import "@JMSJobQueue/Job/macros.html.twig" as macros %}

{% block title %}Job "{{ job.command }}" (ID: {{ job.id }})" - {{ parent() }}{% endblock %}

{% block stylesheets %}
    <style type="text/css">
        {% include "@Twig/exception.css.twig" %}

        .trace-code {
            padding-left:30px;
        }
    </style>
{% endblock %}

{% block content %}
<ul class="breadcrumb">
    <li><a href="{{ path("jms_jobs_overview") }}">Jobs</a> <span class="divider">/</span></li>
    <li class="active">Job "{{ job.command }}"</li>
</ul>

<div class="page-header">
    <h1>Job "{{ job.command }}" <small>(ID: {{ job.id }})</small></h1>
</div>

<table class="table table-bordered table-striped">
    <tr>
        <th width="20%">Command</th>
        <td>{{ macros.command(job, true) }}</td>
    </tr>
    <tr>
        <th>State</th>
        <td>{{ macros.state(job) }}</td>
    </tr>
    {% if job.workerName %}
    <tr>
        <th>WorkerName</th>
        <td>{{ job.workerName }}</td>
    </tr>
    {% endif %}
    <tr>
        <th>Queue</th>
        <td>{{ macros.queue(job) }}</td>
    </tr>
    <tr>
        <th>Created</th>
        <td>{{ macros.ago(job.createdAt) }}</td>
    </tr>
    {% if job.executeAfter %}
        <tr>
            <th>Execute After</th>
            <td>{{ macros.ago(job.executeAfter) }}</td>
        </tr>
    {% endif %}
    {% if job.closedAt %}
    <tr>
        <th>Runtime</th>
        <td>{{ macros.runtime(job) }}</td>
    </tr>
    <tr>
        <th>Closed</th>
        <td>{{ macros.ago(job.closedAt) }}</td>
    </tr>
    {% endif %}
    {% if job.isRetryJob() %}
    <tr>
        <th>Original Job</th>
        <td><a href="{{ path("jms_jobs_details", {"id": job.originalJob.id}) }}">#{{ job.originalJob.id }}</a> {{ macros.state(job.originalJob) }}</td>
    </tr>
    {% endif %}
    {% if relatedEntities|length > 0 %}
    <tr>
        <th>Related Entities</th>
        <td>
            {%- for entity in relatedEntities %}
                {%- if entity.raw is jms_job_queue_linkable -%}
                    <a href="{{ jms_job_queue_path(entity.raw) }}">{{ entity.raw|jms_job_queue_linkname }}</a>
                {%- else -%}
                    {{ entity.class }} ({{ entity.id }})
                {%- endif -%}
                {% if not loop.last %}, {% endif -%}
            {% endfor -%}
        </td>
    </tr>
    {% endif %}
    {% if job.dependencies|length > 0 %}
    <tr>
        <th>Dependencies</th>
        <td>
            {%- for dep in job.dependencies -%}
                <a href="{{ path("jms_jobs_details", {"id": dep.id}) }}" title="{{ dep.command }}{% for arg in dep.args %} {{ arg }}{% endfor %} (ID {{ dep.id }})">{{ dep.command }}</a> {{ macros.state(dep) }}
                {%- if not loop.last %}, {% endif -%}
            {%- endfor -%}
    </tr>
    {% endif %}
    {% if incomingDependencies|length > 0 %}
    <tr>
        <th>Incoming Dependencies</th>
        <td>
            {%- for dep in incomingDependencies -%}
                <a href="{{ path("jms_jobs_details", {"id": dep.id}) }}" title="{{ dep.command }}{% for arg in dep.args %} {{ arg }}{% endfor %} (ID {{ dep.id }})">{{ dep.command }}</a> {{ macros.state(dep) }}
            {%- endfor -%}
        </td>
    </tr>
    {% endif %}
</table>

{% if job.retryJobs|length > 0 %}
<h3>Retry Jobs</h3>

<table class="table table-bordered table-striped table-condensed">
    <thead>
        <tr>
            <th>ID</th>
            <th>Created</th>
            <th>State</th>
        </tr>
    </thead>

    <tbody>
        {% for retryJob in job.retryJobs %}
        <tr>
            <td><a href="{{ path("jms_jobs_details", {"id": retryJob.id}) }}">{{ retryJob.id }}</a></td>
            <td>{{ macros.ago(retryJob.createdAt) }}</td>
            <td>{{ macros.state(retryJob) }}</td>
        </tr>
        {% endfor %}
    </tbody>
</table>

{% endif %}

{% if job.stackTrace is not empty %}
<h3>Stack Trace</h3>
{% for index, exception in job.stackTrace.toarray %}
    <div class="trace trace-as-html">
        <div class="trace-details">
            <div class="trace-head">
            <span class="sf-toggle" data-toggle-selector="#trace-html-{{ index }}" data-toggle-initial="{{ loop.first ? "display" }}">
                <h3 class="trace-class">
                    <span class="trace-namespace">
                        {{ exception.class|split('\\')|slice(0, -1)|join('\\') }}
                        {{- exception.class|split('\\')|length > 1 ? '\\' }}
                    </span>
                    {{ exception.class|split('\\')|last }}

                    <span class="icon icon-close">{{ include('@Twig/images/icon-minus-square-o.svg') }}</span>
                    <span class="icon icon-open">{{ include('@Twig/images/icon-plus-square-o.svg') }}</span>
                </h3>

                {% if exception.message is not empty and index > 1 %}
                    <p class="break-long-words trace-message">{{ exception.message }}</p>
                {% endif %}
            </span>
            </div>

            <div id="trace-html-{{ index }}" class="sf-toggle-content">
                {% set _is_first_user_code = true %}
                {% for i, trace in exception.trace %}
                    {% set _display_code_snippet = _is_first_user_code and ('/vendor/' not in trace.file) and ('/var/cache/' not in trace.file) and (trace.file is not empty) %}
                    {% if _display_code_snippet %}{% set _is_first_user_code = false %}{% endif %}
                    <div class="trace-line">
                        {{ include('@Twig/Exception/trace.html.twig', { prefix: index, i: i, trace: trace, _display_code_snippet: _display_code_snippet, style: 'display' }, with_context = false) }}
                    </div>
                {% endfor %}
            </div>
        </div>
    </div>
{% endfor %}
{% endif %}

{% if job.output is not empty %}
<h3>Output</h3>
<pre style="max-height:300px; overflow:auto;">{{ job.output }}</pre>
{% endif %}

{% if job.errorOutput is not empty %}
<h3>Error Output</h3>
<pre style="max-height:300px; overflow:auto;">{{ job.errorOutput }}</pre>
{% endif %}

{% if job.state == 'failed' or job.errorOutput is not empty %}
<div class="alert alert-warn">
    <a href="{{ path("jms_jobs_retry_job", {"id": job.id}) }}" class="pull-right btn btn-danger">
        <i class="icon-repeat icon-white"></i>
        Retry Job
    </a>
    <p style="margin-bottom: 0; line-height: 30px">Click on the next button to create a new job to retry this failed one.</p>
</div>
{% endif %}

{% if statisticData is not empty %}
<h3>Statistics</h3>
<div id="statistics" style="width:900px; height:300px;"></div>
{% endif %}

{% endblock %}

{% block javascripts %}
    {{ parent() }}

    {% if statisticData is not empty %}
    <script type="text/javascript" src="https://www.google.com/jsapi"></script>
    <script type="text/javascript">
        google.load("visualization", "1", {packages:["corechart"]});
        google.setOnLoadCallback(function() {
            var chart = new google.visualization.LineChart($('#statistics').get(0));
            chart.draw(google.visualization.arrayToDataTable({{ statisticData|json_encode|raw }}), {{ statisticOptions|json_encode|raw }});
        });
    </script>
    {% endif %}

    {% include "@Twig/base_js.html.twig" %}

    <script>
        $(document).ready(function() {
            // If the toolbar is also loaded, then toggling won't work as the toggling listeners are attached twice
            // and eventually cancel each other out. We will attach them a third-time so that we get the same behavior
            // as if they were only attached once.
            if ($('#sf-toolbar').length > 0) {
                Sfjs.createToggles();
            }
        });
    </script>
{% endblock %}
